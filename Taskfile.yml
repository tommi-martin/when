version: '3'

vars:
  IMAGE: when-scheduler
  VERSION: "0.0.1"
  PLATFORMS: linux/arm64 linux/amd64
  CURRENT_ARCH:
    sh: uname -m
  PWD:
    sh: pwd

includes:
  backend: 
    taskfile: src/when/backend/Taskfile.yml
    vars: 
      VERSION: "{{.VERSION}}"
  frontend: 
    taskfile: src/when/frontend/Taskfile.yml
    vars:
      VERSION: "{{.VERSION}}"

tasks:
  default:
    desc: default task
    cmds: 
      - task -a --sort none

  run:
    desc: starts the application for development includes BE and FE with file watcher
    deps: [frontend:install:node]
    aliases: [r]
    cmds:
      - clojure -M:frontend:dev

  run:with-test:
    desc: run with test namespace loaded to repl.
    deps: [frontend:install:node]
    aliases: [rt]
    cmds:
      - clojure -M:test:frontend:dev

  test:
    desc: Runs all test suites
    cmds:
      - clj -X:test

  test:watch:
    desc: Runs all test suites and watches for changes
    cmds:
      - clj -X:test:watch

  db:init:
    desc: inits local postgres database
    cmds:
      - initdb -D .tmp/mydb # Create a database with the data stored in the current directory
      - pg_ctl -D .tmp/mydb -l .tmp/logfile -o "--unix_socket_directories='{{ .PWD }}/.tmp'" start # Start PostgreSQL running as the current user and with the Unix socket in the current directory
      - createdb mydb # Create a database
      - psql mydb < resources/postgresql/create-tables.pgsql # Run the SQL script to create tables in mydb
    requires:
      vars: [PWD]

  db:delete:
    desc: deletes local postgres database
    cmds:
      - pg_ctl -D .tmp/mydb -l .tmp/logfile -o "--unix_socket_directories='{{ .PWD }}'" stop
      - rm -rf .tmp/
    requires:
      vars: [PWD]

  db:connect:
    desc: Run psql to connect to running database.
    aliases: [db]
    cmds:
      - psql mydb
